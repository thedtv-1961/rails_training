dependent:
	destroy (nen chon, co callback)
	delete_allko co callback
	nullify: record lien ket ko b xoa
	Restrict: ko cho xoa cac record phu thuoc, :restrict_with_exceptions | restrict

Any, exists, blank, empty
	empty? and blank? trả về true nếu một quan hệ trả về 0 bản ghi.
	any? and exists? trả true nếu một quan hệ trả về ít nhất một bản ghi.

	any: check theo kieu "*" trong CSDL
		truyen vao dk check: tuy van tat ca trong CSDL 
		ko tryuen vao dk  check: thi se~ .empty? du lieu da dc load trc do
	exists: chi check 1 ban ghi trong CSDL

Flash
	.now dung cho render, current action
	chi co trong next request, redirect_to

===================
fix code va dua len heroku
test thu cach custom error txt

create ha build







*/ Cung cấp bởi Ruby
  1/ nil?
    Có thể sử dụng trên bất kỳ đối tượng nào
    Sẽ chỉ trả về true khi thực sự là nil. Ví dụ:
  2/ Empty?
    chỉ sử dụng trên các đối tượng dạng tập hợp(collection) như Hash, Array, Set
    Phương thức sẽ trả về true khi tập hợp không có phần tử nào

*/ Cung cap boi Rails, dung dc cho tat ca cac object
  1/ blank?
    nil và false

  2/ present?
    ngc lai blank?

nil, false, empty


cai cookies[:user_id] ko thay dung den

chapter 13 ko hieu cai nay:
user.microposts.create!(arg)  Creates a micropost associated with user (exception on failure


dependent :destroy la gif, thay giong on delete cascadepp
cac ham tim nhu ago ....

any? la gi


hoc thuoc cac phuong thuc references nhu :
  user.microposts.create
  user.microposts.create! ....

  flash.now la gif

  <%= render "layouts/shared/error_messages", object: f.object %> : f.object la cai gif, vs lai cai template nay la cua @user

  @micropost = current_user.microposts.build trong home cua static page

request.referrer la gif
upload hinh








??????????????????
class inherit conmtroller, moidel, test, ... coi chpter3,4,5 co 2 cai hinh
Model lifecycle trong slide 6 co noi, update_attributes vs update_attribute, Find vs Find_by
Some available callbacks: slide 6 page 18
cross-site request forgery (CSRF) la gi



 Returns the hash digest of the given string.
  def User.digest(string)
    cost = ActiveModel::SecurePassword.min_cost ? BCrypt::Engine::MIN_COST :
                                                  BCrypt::Engine.cost
    BCrypt::Password.create(string, cost: cost)
  end

  # Returns a random token.
  def User.new_token
    SecureRandom.urlsafe_base64
  end
????????????????????????

 aaa ||= 222: neu aaa == nil thi gan = 222 con neu != nil thi ko gan
 
===============DEPLAY APP ON HEROKU====================
 
===============BEFORE CCOMMIT====================
- rubocop
- rubice
- *test
- I18n
- gem config dynamic
===================================
*/ delete: bundle exec rubocop
*/ helpers chỉ dùng đc trong controller và views ko dùng trong model


I > RUBY
- Metaprograming: Ham send sẽ thực thi một phương thức; còn call sẽ thực thi một đoạn mã cụ thể



II > RAILS
1/ Macro:
  - rails [_version_] new app_name # command to create new project with name “app_name”
  ➢ bundle install # install all gem in project
  ➢ bundle update # update to the newest version of gem
  ➢ rails server or rails s # run server
  =========
  + create migrate: rails generate migration CreateUsers name:string email:string
  + edit migrate: rails generate migration AddDetailsToUsers phone_number:string age:integer
  + add index to column: rails generate migration add_index_to_users_email #=> doesn't auto add, we must fill in( add_index :users, :email, unique: true)
  =======
  + scafford: rails generate scaffold User name:string email:string # create model User with controller, view, model ...
  + create controller: rails generate controller StaticPages home help
  + create model: rails generate model User name:string email:string ==> ko co "s"
  + create resource: rails generate resource Post name:string content:text
  + crete healper: rails generate -h
  =====
  + migrate: rails db:migrate or bundle exec rake db:migrate # migrate model
  + edit migrate: rails generate migration add_password_digest_to_users password_digest:string
  + migrate to specific version: rails db:migrate VERSION=20170306120000
  + rollback: rails db:rollback
  + setp database: rails db:setup
  + reset database: rails db:migrate:reset
  + seed data: rails db:seed
  
  
  =====reset DB===========
  
  rails db:migrate:reset
  =====add columns from seed===========
  rails db:seed

  =====destroy model===========
  rails destroy model <model_name

  ========= destroy scaffold=========
  rake db:rollback
  rails destroy scaffold MyFoo

  ========= destroy DB=========
  rake db:drop



2/ Sublime config:
  Preference -> Setting User
  SU:
  {
    "ensure_newline_at_eof_on_save": true,
    "font_size": 11,
    "highlight_line": true,
    "ignored_packages":
    [
      "Vintage"
    ],
    "rulers":
    [
      80
    ],
    "show_encoding": true,
    "show_line_endings": true,
    "tab_size": 2,
    "translate_tabs_to_spaces": true,
    "trim_trailing_white_space_on_save": true
  }
  Comunity:
  {
  "auto_complete": true,
  "auto_complete_commit_on_tab": true,
  "copy_with_empty_selection": true,
  "ensure_newline_at_eof_on_save": true,
  "font_size": 11,
  "highlight_line": true,
  "index_files": true,
  "ignored_packages":
  [
    "Vintage"
  ],
  "rulers":
  [
    80
  ],
  "show_encoding": true,
  "show_line_endings": true,
  "tab_size": 2,
  "translate_tabs_to_spaces": true,
  "trim_trailing_white_space_on_save": true
}

3/ Model:
  presence: true # ko dc de field nil, VD:L validates :name,  presence: true
  length: { maximum: 50 }:
  validates :email, format: { with: /<regular expression>/ } #=> link test: http://www.rubular.com/
  uniqueness: true #=> Unique
  uniqueness: { case_sensitive: false } #=> check unique with lower/upper case
  *Ex:
    class User < ApplicationRecord
      validates :name,  presence: true, length: { maximum: 50 }
      VALID_EMAIL_REGEX = /\A[\w+\-.]+@[a-z\d\-.]+\.[a-z]+\z/i
      validates :email, presence: true, length: { maximum: 255 },
                        format: { with: VALID_EMAIL_REGEX },
                        uniqueness: true

                        Test cho unique hoi phuc tap:
                          duplidate_user = @user.dup
                          duplidate_user.email = @user.email
                          assert @user.valid?
                          @user.save # chi hoat dong khi save 1 trong cac du lieu: @user hoac duplidate_user
                          assert  duplidate_user.valid?

4/ Object
  userxx = UserA
  - update an oibject:
    + An User object
    + userxx.email = "new value"
    + userxx.save

  - check validate:
    + userxx.valid?

  - Get Usser:
    + User.all
    + User.first
    + User.last


  - find:
    + find
    + find_by(property_name: value)

  + create a new User, 2 way:
    1/ user = User.new(xxxx)
        user.save
    2/ User.create(xxxxxxxxxx) => auto save to DB

  + delete a User
    userxx.destroy

5/ Tets:
  rails test
  rails test:controllers
  rails test:models
6/ Form:

    <%= form_for(@user) do |f| %>
      <%= f.label :name %>
      <%= f.text_field :name %>

      <%= f.label :email %>
      <%= f.email_field :email %>

      <%= f.label :password %>
      <%= f.password_field :password %>

      <%= f.label :password_confirmation, "Confirmation" %>
      <%= f.password_field :password_confirmation %>

      <%= f.submit "Create my account", class: "btn btn-primary" %>
    <% end %>

7/ Remember Login

  a) Tạo cookies:
    + gọi từ SessionController.create (1)
    + new token sử dụng SecureRandom.url_base64
    + digest (1). và update vào record user hiện tại trong DB

  b) Check login:
    + check logged_in trong views (logged_in trong helpers)
    + check trong session
    + check trong cookies
      ++ check xem local_cookie == DB_cookie ? login user

